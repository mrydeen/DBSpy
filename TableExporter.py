#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.7.2 on Mon May 15 11:21:50 2017
#

import wx, os

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class TableExporter(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: TableExporter.__init__
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.tableLabel = wx.StaticText(self.panel_1, wx.ID_ANY, "Table XXXXXX")
        self.selectButton = wx.Button(self.panel_1, wx.ID_ANY, "Select All")
        self.columnCheckBox = wx.CheckListBox(self.panel_1, wx.ID_ANY, choices=["choice 1"])
        self.fileNameText = wx.TextCtrl(self.panel_1, wx.ID_ANY, "")
        self.fileNameButton = wx.BitmapButton(self.panel_1, wx.ID_ANY, wx.Bitmap(".\\images\\file.jpg", wx.BITMAP_TYPE_ANY))
        self.exportButton = wx.Button(self.panel_1, wx.ID_ANY, "Export")
        self.cancelButton = wx.Button(self.panel_1, wx.ID_ANY, "Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.selectButtonHandler, self.selectButton)
        self.Bind(wx.EVT_CHECKLISTBOX, self.columnCheckBoxHandler, self.columnCheckBox)
        self.Bind(wx.EVT_BUTTON, self.selectFilenameButtonHandler, self.fileNameButton)
        self.Bind(wx.EVT_BUTTON, self.exportButtonHandler, self.exportButton)
        self.Bind(wx.EVT_BUTTON, self.cancelButtonHandler, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TableExporter.__set_properties
        self.SetTitle("Table Export")
        self.SetSize((285, 570))
        self.columnCheckBox.SetSelection(0)
        self.fileNameText.SetMinSize((220, 24))
        self.fileNameButton.SetSize(self.fileNameButton.GetBestSize())
        self.initLocals()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TableExporter.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, "Filename"), wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, "Column Select"), wx.HORIZONTAL)
        sizer_2.Add(self.tableLabel, 0, wx.ALIGN_CENTER | wx.BOTTOM | wx.TOP, 10)
        sizer_2.Add(self.selectButton, 0, wx.ALIGN_CENTER, 0)
        sizer_3.Add(self.columnCheckBox, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_5.Add(self.fileNameText, 1, wx.ALIGN_RIGHT | wx.EXPAND | wx.LEFT, 5)
        sizer_5.Add(self.fileNameButton, 0, wx.ALIGN_RIGHT | wx.LEFT, 5)
        sizer_4.Add(sizer_5, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_6.Add((20, 40), 1, wx.EXPAND, 0)
        sizer_6.Add(self.exportButton, 0, wx.BOTTOM | wx.RIGHT | wx.TOP, 5)
        sizer_6.Add(self.cancelButton, 0, wx.BOTTOM | wx.RIGHT | wx.TOP, 5)
        sizer_2.Add(sizer_6, 0, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_2)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade
        return

    def initLocals( self ):
        self.parent = None
        self.table = ""
        self.columns = []
        self.checkedColumns = []
        self.allSelected = False
        return

    def setParent( self, parent ):
        self.parent = parent
        return

    def setTable( self, table ):
        self.table = table
        self.tableLabel.SetLabel(table)
        return

    def setColumns( self, columns ):
        self.columns = columns
        self.columnCheckBox.SetItems(columns)
        return

    def selectButtonHandler(self, event):  # wxGlade: TableExporter.<event_handler>
        for i in range(0, len(self.columns)):
            if ( not self.allSelected ):
                self.columnCheckBox.Check(i)
            else:
                self.columnCheckBox.Check(i, False)

        if ( self.allSelected ): 
            self.allSelected = False
            self.selectButton.SetLabel("Select All")
        else: 
            self.allSelected = True
            self.selectButton.SetLabel("Unselect All")
        return 

    def columnCheckBoxHandler(self, event):  # wxGlade: TableExporter.<event_handler>
        event.Skip()
        return

    def selectFilenameButtonHandler(self, event):  # wxGlade: TableExporter.<event_handler>
        wildcards = "CSV (*.csv)|*.csv"
        dlg = wx.FileDialog(self, 
                            message="Select a filename to save the CSV file to", 
                            defaultDir=".", 
                            defaultFile="",
                            wildcard=wildcards,
                            style=wx.FD_OPEN|wx.FD_CHANGE_DIR )
        if ( dlg.ShowModal() == wx.ID_OK ):
            path = dlg.GetPath()
            self.fileNameText.SetValue(path)
        dlg.Destroy()
        return

    def exportButtonHandler(self, event):  # wxGlade: TableExporter.<event_handler>
        fileName = self.fileNameText.GetValue()
        if ( fileName == "" ):
            wx.MessageBox( "Please select a filename first" )
            return

        # Check if the file exists already.
        if ( os.path.isfile(fileName) == True ):
            retval = wx.MessageBox( "File already exists, overwrite?", 
                                style=wx.OK|wx.CANCEL)
            if ( retval != 4 ):
                return

        # While exporting, disable the checkbox
        self.columnCheckBox.Disable()
        # Walk the checkbox items and see which ones are checked
        selectedIndexs = []
        selectedColumns = []
        for i in range(0, len(self.columns)):
            if ( self.columnCheckBox.IsChecked(i) ):
                selectedIndexs.append(i)
                selectedColumns.append(self.columns[i])

        # Now open the file 
        file = None
        try:
            file = open(fileName, "w")
        except IOError as inst:
            wx.MessageBox("Permission denied for file: " + fileName)
            self.columnCheckBox.Enable()
            return

        # Dump out the header first which is all of the column names
        header = ", ".join(selectedColumns)
        file.write(header+"\n")
        rows = self.parent.dbViewerRows
        if ( self.parent.dbViewerFilterOn == True ):
            rows = self.parent.dbViewerFilterList

        for row in rows:
            c = ""
            for index in selectedIndexs:
                if ( c == "" ):
                    c = str(row[index])
                else:
                    c = c + ", " + str(row[index])
            file.write(c + "\n")
        file.close()

        self.columnCheckBox.Enable()
        wx.MessageBox("Export completed successfully")
        return

    def cancelButtonHandler(self, event):  # wxGlade: TableExporter.<event_handler>
        self.Hide()
        return

# end of class TableExporte
if __name__ == "__main__":

    main = wx.App(0)
    SQLC = TableExporter(None, -1, "")
    main.SetTopWindow(SQLC)
    SQLC.Show()
    main.MainLoop()

