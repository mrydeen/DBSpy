#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Wed Mar 25 15:04:47 2015
#

import wx
import wx.lib.calendar
import wx.adv
import time, datetime

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class TimeRangeSelector(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: TimeRangeSelector.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.fromCalendar = wx.adv.CalendarCtrl(self.panel_1, wx.ID_ANY)
        self.fromCalendarTime = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_CENTRE)
        self.sizer_3_staticbox = wx.StaticBox(self.panel_1, wx.ID_ANY, "From Time")
        self.toCalendar = wx.adv.CalendarCtrl(self.panel_1, wx.ID_ANY)
        self.toCalendarTime = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_CENTRE)
        self.sizer_4_copy_staticbox = wx.StaticBox(self.panel_1, wx.ID_ANY, "To Time")
        self.sizer_2_staticbox = wx.StaticBox(self.panel_1, wx.ID_ANY, "Time Range")
        self.quickDatePicker = wx.RadioBox(self.panel_1, wx.ID_ANY, "Quick Range Selector", choices=["1 day", "2 days", "3 days", "1 week", "1 month", "13 months"], majorDimension=1, style=wx.RA_SPECIFY_ROWS)
        self.applyButton = wx.Button(self.panel_1, wx.ID_ANY, "Apply")
        self.cancelButton = wx.Button(self.panel_1, wx.ID_ANY, "Cancel")

        self.__set_properties()
        self.__do_layout()
        self.initLocals()

        self.Bind(wx.adv.EVT_CALENDAR_SEL_CHANGED, self.fromCalendarChangedHandler, self.fromCalendar)
        self.Bind(wx.adv.EVT_CALENDAR_SEL_CHANGED, self.toCalendarChangedHandler, self.toCalendar)
        self.Bind(wx.EVT_RADIOBOX, self.radioButtonChangeHandler, self.quickDatePicker)
        self.Bind(wx.EVT_BUTTON, self.applyHandler, self.applyButton)
        self.Bind(wx.EVT_BUTTON, self.cancelHandler, self.cancelButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TimeRangeSelector.__set_properties
        self.SetTitle("Time Range Selector")
        self.quickDatePicker.SetSelection(2)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TimeRangeSelector.__do_layout
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_2_staticbox.Lower()
        sizer_2 = wx.StaticBoxSizer(self.sizer_2_staticbox, wx.HORIZONTAL)
        self.sizer_4_copy_staticbox.Lower()
        sizer_4_copy = wx.StaticBoxSizer(self.sizer_4_copy_staticbox, wx.VERTICAL)
        self.sizer_3_staticbox.Lower()
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.VERTICAL)
        sizer_3.Add(self.fromCalendar, 1, wx.EXPAND, 0)
        sizer_3.Add(self.fromCalendarTime, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_2.Add((5, 20), 0, 0, 0)
        sizer_4_copy.Add(self.toCalendar, 1, wx.EXPAND, 0)
        sizer_4_copy.Add(self.toCalendarTime, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_4_copy, 1, wx.EXPAND, 0)
        sizer_5.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_7.Add(self.quickDatePicker, 0, wx.ALL, 4)
        sizer_7.Add((20, 20), 0, 0, 0)
        sizer_5.Add(sizer_7, 0, wx.EXPAND, 0)
        sizer_6.Add((20, 20), 1, wx.EXPAND, 0)
        sizer_6.Add(self.applyButton, 0, wx.ALL, 4)
        sizer_6.Add(self.cancelButton, 0, wx.ALL, 4)
        sizer_5.Add(sizer_6, 0, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_5)
        sizer_4.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_4)
        sizer_4.Fit(self)
        self.Layout()
        # end wxGlade

    def initLocals( self ):
        threeDays = wx.DateSpan(days=3)
        self.currentTime = wx.DateTime.Now()
        self.toCalendarTime.SetValue( str(self.currentTime) )

        threeDaysBack = self.currentTime - threeDays
        self.fromCalendarTime.SetValue( str(threeDaysBack) )
        self.fromCalendar.SetDate(threeDaysBack);

        self.applyCallBack = None
        self.cancelCallBack = None
        return

    def setApplyCallback( self, callback,  ):
        self.applyCallBack = callback
        return

    def setCancelCallback( self, callback ):
        self.cancelCallBack = callback
        return

    def fromCalendarChangedHandler(self, event):  # wxGlade: TimeRangeSelector.<event_handler>
        selectedDate = str(event.GetDate()).split()[0]
        fromTime = " ".join(self.fromCalendarTime.GetValue().split()[1:])
        # Strip off the times and place together
        self.fromCalendarTime.SetValue( selectedDate + " " + fromTime )
        return

    def toCalendarChangedHandler(self, event):  # wxGlade: TimeRangeSelector.<event_handler>
        selectedDate = str(event.GetDate()).split()[0]
        toTime = " ".join(self.toCalendarTime.GetValue().split()[1:])
        # Strip off the times and place together
        self.toCalendarTime.SetValue( selectedDate + " " + toTime )
        return

    def radioButtonChangeHandler(self, event):  # wxGlade: TimeRangeSelector.<event_handler>
        index = event.GetSelection()
        dateBack = None
        if (index == 0): # 1 day
            dateBack = self.currentTime - wx.DateSpan(days=1)
        elif (index == 1): #2 days
            dateBack = self.currentTime - wx.DateSpan(days=2)
        elif (index == 2): #3 days
            dateBack = self.currentTime - wx.DateSpan(days=3)
        elif (index == 3): #1 week 
            dateBack = self.currentTime - wx.DateSpan(weeks=1)
        elif (index == 4): #1 month 
            dateBack = self.currentTime - wx.DateSpan(months=1)
        elif (index == 5): #13 months 
            dateBack = self.currentTime - wx.DateSpan(months=13)

        self.fromCalendar.SetDate(dateBack)

        self.fromCalendarTime.SetValue(str(dateBack))

        return

    def applyHandler(self, event):  # wxGlade: TimeRangeSelector.<event_handler>
        #print self.fromCalendarTime.GetValue()
        #print self.toCalendarTime.GetValue()

        self.applyCallBack( self.fromCalendarTime.GetValue(), self.toCalendarTime.GetValue() )
        self.Hide()
        return

    def cancelHandler(self, event):  # wxGlade: TimeRangeSelector.<event_handler>
        self.cancelCallBack()
        self.Hide()
        return

# end of class TimeRangeSelector
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    TimeRangeSelector = TimeRangeSelector(None, wx.ID_ANY, "")
    app.SetTopWindow(TimeRangeSelector)
    TimeRangeSelector.Show()
    app.MainLoop()
